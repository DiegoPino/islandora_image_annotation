<?php

define('ISLANDORA_IMAGE_ANNOTATION_VIEW', 'view image annotations');
define('ISLANDORA_IMAGE_ANNOTATION_CREATE', 'create image annotations');

function islandora_image_annotation_menu() {
  $items = array();
  $items['admin/islandora/image_annotation'] = array(
    'title' => 'Image annotation',
    'description' => 'Configure the image annotation module.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_image_annotation_admin'),
    'file' => 'admin/islandora_image_annotation.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['emic/shared/test'] = array(
    'page callback' => 'build_manifest',
    'type' => MENU_CALLBACK,
    'access arguments' => array(ISLANDORA_IMAGE_ANNOTATION_VIEW),
    'file' => 'includes/islandora_image_annotation_build_streams.inc',
  );

  $items['emic/shared/setup'] = array(
    'page callback' => 'islandora_canvas_setup',
    'type' => MENU_CALLBACK,
    'access arguments' => array(ISLANDORA_IMAGE_ANNOTATION_VIEW),
    'file' => 'includes/islandora_image_annotation.callbacks.inc',
  );

  $items['emic/shared/add_annotation'] = array(
    'page callback' => 'islandora_add_annotation',
    'type' => MENU_CALLBACK,
    'access arguments' => array(ISLANDORA_IMAGE_ANNOTATION_CREATE),
    'file' => 'includes/islandora_image_annotation.callbacks.inc',
  );

  $items['emic/get_urns'] = array(
    'page callback' => 'islandora_shared_get_annotation_pids',
    'type' => MENU_CALLBACK,
    'access arguments' => array(ISLANDORA_IMAGE_ANNOTATION_VIEW),
    'file' => 'includes/islandora_image_annotation.callbacks.inc',
  );

  $items['emic/get_annotation'] = array(
    'page callback' => 'islandora_shared_get_annotation',
    'type' => MENU_CALLBACK,
    'access arguments' => array(ISLANDORA_IMAGE_ANNOTATION_VIEW),
    'file' => 'includes/islandora_image_annotation.callbacks.inc',
  );
  $items['emic/delete_annotation'] = array(
    'page callback' => 'islandora_delete_annotation',
    'type' => MENU_CALLBACK,
    'access arguments' => array(ISLANDORA_IMAGE_ANNOTATION_CREATE),
    'file' => 'includes/islandora_image_annotation.callbacks.inc',
  );

  $items['emic/serve'] = array(
    'page callback' => 'islandora_serve',
    'type' => MENU_CALLBACK,
    'access arguments' => array(ISLANDORA_IMAGE_ANNOTATION_VIEW),
    'file' => 'includes/islandora_image_annotation_build_streams.inc',
  );
  $items['emic/update_annotation'] = array(
    'page callback' => 'islandora_canvas_update_annotation',
    'type' => MENU_CALLBACK,
    'access arguments' => array(ISLANDORA_IMAGE_ANNOTATION_CREATE),
    'file' => 'includes/islandora_image_annotation.callbacks.inc',
  );

  $items['islandora/object/%islandora_object/view/annotation'] = array(
    'title' => 'Image Annotation',
    'page callback' => 'islandora_image_annotation_view',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_image_annotation_access',
    'access arguments' => array(2),
  );

  return $items;
}

/**
 * drupal hook_permissions function
 * @return array
 */
function islandora_image_annotation_permission() {
  return array(
    ISLANDORA_IMAGE_ANNOTATION_VIEW => array(
      'title' => t(ISLANDORA_IMAGE_ANNOTATION_VIEW),
      'description' => t('View image annotations.')
    ),
    ISLANDORA_IMAGE_ANNOTATION_CREATE => array(
      'title' => t(ISLANDORA_IMAGE_ANNOTATION_CREATE),
      'description' => t('Create image Annotations')
    ),
  );
}

/**
 * determines whether or not to show this modules view tab
 * @global object $user
 * @param FedoraObject $fedora_object
 * @return boolean
 */
function islandora_image_annotation_access($fedora_object) {
  if (!isset($fedora_object)) {
    return FALSE;
  }

  $models = $fedora_object->models;
  $cmodel_list = variable_get('islandora_annotation_mappings');
  foreach ($fedora_object->models as $model) {
    if (isset($cmodel_list[$model])) {
      return user_access(ISLANDORA_IMAGE_ANNOTATION_VIEW);
    }
  }
  return FALSE;
}

/**
 * Theme registry function
 * 
 * @return array
 */
function islandora_image_annotation_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_image_annotation_view' => array(
      'template' => 'theme/islandora-image-annotation',
      'variables' => array('islandora_objects' => NULL),
    ),
    'islandora_annotation_table' => array(
      'render element' => 'form',
    ),
    'islandora_image_annotation_solr' => array(
      'template' => 'theme/islandora-image-annotation-solr',
      'variables' => array('results' => NULL, 'elements' => array()),
    ),
  );
}

/**
 * /**
 * the image annotation view 
 * /
 * @param FedoraObject $object
 * @return string 
 */
function islandora_image_annotation_view($object) {
  $output = theme('islandora_image_annotation_view', array('islandora_object' => $object));
  return $output;
}

function islandora_image_annotation_preprocess_islandora_image_annotation_view(&$variables) {
  global $base_url;
  $islandora_object = $variables['islandora_object'];
  $pid = $islandora_object->id;
  $path = drupal_get_path('module', 'islandora_image_annotation');
  $src = "$base_url/$path/shared_canvas/index.php?PID=$pid";
  $variables['islandora_image_annotation_src'] = $src;
  $variables['islandora_image_annotation_pid'] = $pid;

  drupal_add_js($path . '/shared_canvas/js/window_behaviours.js');

  // add css
  drupal_add_css($path . '/shared_canvas/css/window_behaviours.css');
}

function islandora_image_annotation_islandora_solr_primary_display() {
  return array(
    'annotation' => array(
      'name' => t('Annotation'),
      'module' => 'islandora_image_annotation',
      'file' => 'solr/IslandoraSolrResultsAnno.inc',
      'class' => "IslandoraSolrResultsAnno",
      'function' => "displayResults",
      'description' => t("Search results for annotations, annotations provide links to their parent objects"),
    )
  );
}


/**
 * hook_preprocess function 
 *
 * @global type $base_url
 * @global type $base_path
 * @param type $variables
 *   An associative array containing:
 *   - results: array of returned Solr documents
 *   - elements: (optional) additional elements to include in the template file
 *
 * 
 * 
 */
function islandora_image_annotation_preprocess_islandora_image_annotation_solr(&$variables) {
  // base url
  global $base_url;
  // base path
  global $base_path;

  // set base url
  $variables['base_url'] = $base_url;

  // set base path
  $variables['base_path'] = $base_path;

  // get path
  $path = $base_path . drupal_get_path('module', 'islandora_solr');

  // placeholder image
  $solr_default_img = $path . '/images/defaultimg.png';
  $variables['elements']['solr_default_img'] = $solr_default_img;

  // make all variables in 'elements' available as variables in the template file
  foreach ($variables['elements'] as $key => $value) {
    $variables[$key] = $value;
  }

  foreach($variables['results'] as $key => $value) {
    $object = islandora_object_load($value['PID']['value']);
    $variables['pid_for_url'][$key] = $value['PID']['value'];// we may want to return to the parent not the object
    if ($object) {
      if (isset($object['TN'])) {
        $pid = $variables['results'][$key]['PID']['value'];
        $variables['thumbnail_path'][$key] = url('islandora/object/' . $pid . '/datastream/TN');
      }
      else if (isset($value['rels.hasModel']) && $value["rels.hasModel"]['value'] == 'info:fedora/islandora:OACCModel') {
        $variables['pid_for_url'][$key] = $value['PARENT_pid']['value'];//create link to parent object
        $variables['anno_category'] = isset($value['anno_category_s']['value']) ? $value['anno_category_s']['value'] : '';
        $variables['anno_title'] = isset($value['anno_title_s']['value']) ? $value['anno_title_s']['value'] : '';
        $variables['anno_body'] = isset($value['anno_body_t']['value']) ? $value['anno_body_t']['value'] : '';
        $variables['thumbnail_path'][$key] = url('islandora/object/' . $value['PARENT_pid']['value'] . '/datastream/TN');
      } else {
        $variables['thumbnail_path'][$key] = $path . '/images/defaultimg.png';
      }
    }
    else {
      $variables['thumbnail_path'][$key] = $path . '/images/defaultimg.png';
    }
  }
}
